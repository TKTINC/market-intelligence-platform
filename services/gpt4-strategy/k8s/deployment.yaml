apiVersion: apps/v1
kind: Deployment
metadata:
  name: gpt4-strategy-service
  namespace: mip
  labels:
    app: gpt4-strategy
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: gpt4-strategy
  template:
    metadata:
      labels:
        app: gpt4-strategy
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8006"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: gpt4-strategy
        image: mip/gpt4-strategy:latest
        ports:
        - containerPort: 8006
          name: http
        env:
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: openai-secrets
              key: api-key
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: db-secrets
              key: url
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"
        - name: ENABLE_SECURITY_VALIDATION
          value: "true"
        - name: ENABLE_RATE_LIMITING
          value: "true"
        - name: ENABLE_COST_TRACKING
          value: "true"
        - name: MAX_TOKENS
          value: "4000"
        - name: TEMPERATURE
          value: "0.3"
        - name: REQUESTS_PER_MINUTE
          value: "50"
        - name: COST_PER_HOUR_LIMIT
          value: "100.0"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8006
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8006
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: gpt4-strategy-service
  namespace: mip
  labels:
    app: gpt4-strategy
spec:
  selector:
    app: gpt4-strategy
  ports:
  - port: 8006
    targetPort: 8006
    name: http
  type: ClusterIP

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: gpt4-strategy-hpa
  namespace: mip
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: gpt4-strategy-service
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
